# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pets_pb2 as pets__pb2


class PetsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_pets = channel.unary_unary(
        '/pets.Pets/get_pets',
        request_serializer=pets__pb2.pets_request.SerializeToString,
        response_deserializer=pets__pb2.pets_reply.FromString,
        )


class PetsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_pets(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PetsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_pets': grpc.unary_unary_rpc_method_handler(
          servicer.get_pets,
          request_deserializer=pets__pb2.pets_request.FromString,
          response_serializer=pets__pb2.pets_reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pets.Pets', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
