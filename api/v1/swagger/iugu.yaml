paths:
  /iugu/accounts:
    get:
      tags:
        - financials
      summary: Get accounts of user
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order'
      security:
        - token: []
      responses:
        200:
          $ref: '#/components/responses/IuguAccountsResponse'
        401:
          $ref: '#/components/responses/Unauthorized'

  /iugu/banks:
    get:
      tags:
        - financials
      summary: Get banks used by Iugu
      parameters:
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/order'
      security:
        - token: []
      responses:
        200:
          $ref: '#/components/responses/IuguBanksResponse'
        401:
          $ref: '#/components/responses/Unauthorized'

  /iugu/credit_card:
    post:
      tags:
        - financials
      summary: Register a new credit card for user
      parameters:
        - $ref: '#/components/parameters/iuguToken'
      security:
        - token: []
      responses:
        200:
          description: Credit Card was registred with success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IuguAccounts'
        401:
          $ref: '#/components/responses/Unauthorized'

components:
  parameters:
    iuguToken:
      in: body
      name: token
      description: Token from iugu api
      required: true
      schema:
        type: string

  schemas:
    IuguBank:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
          readOnly: true

    IuguBanks:
      type: array
      items:
        $ref: '#/components/schemas/IuguBank'

    IuguAccounts:
      type: array
      items:
        $ref: '#/components/schemas/IuguAccount'

    IuguAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        bank_id:
          type: integer
          required: true
          description: Id of bank
        name:
          type: string
          description: Full name of account owner
        branch:
          type: string
          description: Number of Bank branch
        account:
          type: string
          description: Number of account
        cpf:
          type: string
          pattern: (^\d{3}\.\d{3}\.\d{3}\-\d{2}$)|(^\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2}$)
        kind:
          type: string
          enum: ['personal', 'business']
      example:
        id: 1
        bank_id: 5
        name: Peter Parker
        branch: '9023'
        account: '123092-9'
        cpf: 4111111111111111
        kind: personal

  responses:
    IuguBanksResponse:
      description: List of banks used on Iugu
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IuguBanks'

    IuguAccountsResponse:
      description: List of iugu accounts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IuguAccounts'
